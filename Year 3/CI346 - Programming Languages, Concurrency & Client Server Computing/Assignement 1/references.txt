https://en.m.wikipedia.org/wiki/Programming_paradigm
https://www.w3schools.com/java/java_inheritance.asp
https://dev.to/rlxdprogrammer/an-overview-on-different-programming-paradigms-functional-style-of-programming-in-modern-languages-3ppo
https://beginnersbook.com/2013/05/method-overloading/
https://www.tutorialspoint.com/What-is-function-overloading-in-JavaScript
https://en.wikipedia.org/wiki/Law_of_Demeter
https://arxiv.org/ftp/arxiv/papers/1009/1009.0305.pdf
https://java-design-patterns.com/principles/#minimise-coupling
https://hackr.io/blog/java-vs-javascript
https://www.linuxtopia.org/online_books/programming_books/thinking_in_java/TIJ308_001.htm
https://www.w3schools.com/java/java_inheritance.asp
https://www.javaworld.com/article/2077470/java-tip-107--maximize-your-code-reusability.html
https://www.javaworld.com/article/2077313/code-reuse-and-object-oriented-systems.html 
https://stackoverflow.com/questions/46261778/how-interfaces-in-java-used-for-code-reuse
http://mrbool.com/modularity-in-javascript/28646
https://medium.com/dev-bits/everything-i-know-about-writing-modular-javascript-applications-37c125d8eddf
https://v8.dev/features/moduleshttps://v8.dev/features/modules
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules
https://berb.github.io/diploma-thesis/original/092_progtrends.html
https://www.developer.com/java/other/modularity-in-java-java-9-modularity-versus-prior-versions.html
https://www.oreilly.com/library/view/java-9-modularity/9781491954157/ch01.html
https://www.toptal.com/software/creating-modular-code-with-no-dependencies
https://study.com/academy/lesson/modular-programming-definition-application-in-java.html
https://www.linuxtopia.org/online_books/programming_books/thinking_in_java/TIJ308.htm
https://blog.logrocket.com/node-js-multithreading-what-are-worker-threads-and-why-do-they-matter-48ab102f8b10/
https://blog.vanila.io/handling-concurrency-with-async-await-in-javascript-8ec2e185f9b4
https://concurrent-tasks.js.org/
https://web.stanford.edu/class/cs98si/slides/overview.html
https://stackoverflow.com/questions/39879/why-doesnt-javascript-support-multithreading
https://stackoverflow.com/questions/1326071/is-java-a-compiled-or-an-interpreted-programming-language
https://en.wikipedia.org/wiki/Pure_function#I/O_in_pure_functions
http://tutorials.jenkov.com/java-functional-programming/index.html
https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976
https://codeburst.io/functional-programming-in-javascript-e57e7e28c0e5
https://www.leighhalliday.com/react-purity
https://www.freecodecamp.org/news/functional-programming-principles-in-javascript-1b8fc6c3563f/
https://beginnersbook.com/2013/05/method-overloading/
https://dzone.com/articles/java-8-lambas-limitations-closures
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules
https://www.oreilly.com/library/view/programming-javascript-applications/9781491950289/ch05.html
https://www.linuxtopia.org/online_books/programming_books/thinking_in_java/TIJ308.htm
https://www.journaldev.com/1325/composition-in-java-example
https://sabe.io/classes/javascript/functions
https://medium.com/agrotis-developers/improving-your-javascript-code-reusability-with-functional-programming-paradigms-3a17b8a1ae4a
https://www.journaldev.com/1061/thread-safety-in-java
https://www.geeksforgeeks.org/javascript-output/
https://www.w3schools.com/js/js_input_examples.asp
https://berb.github.io/diploma-thesis/original/092_progtrends.html 
https://towardsdatascience.com/java-vs-javascript-which-is-the-best-choice-for-2019-a41ee2d3f78d
https://www.educba.com/java-vs-javascript/
https://www.upwork.com/hiring/development/java-vs-javascript/
https://www.htmlgoodies.com/beyond/javascript/article.php/3470971/Java-vs-JavaScript.htm
https://berb.github.io/diploma-thesis/original/092_progtrends.html
https://www.thesoftwareguild.com/faq/difference-between-java-and-javascript/
https://www.seguetech.com/java-vs-javascript-difference/
